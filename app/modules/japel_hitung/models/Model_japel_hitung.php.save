<?php

/**
 * @author  : Hanif Burhanudin <dev.jogja@gmail.com>
 */
class Model_japel_hitung extends CI_Model
{
    public $dbSimrs;
    private $username;
    private $date;
    public function __construct()
    {
        parent::__construct();
        $this->dbSimrs = $this->load->database("simrs", true);
        $this->username = $this->session->userdata('__username');
        $this->date = date('Y-m-d H:i:s');
    }

    public function get_periode_row($param = [])
    {
        $this->dbSimrs->from('japel_periode jp');
        return $this->dbSimrs->get();
    }

    public function get_periode($param = [])
    {
        $this->dbSimrs->select('jp.id');
        $this->dbSimrs->from('japel_periode jp');
        $this->dbSimrs->where("(MONTH(jp.periode)='" . $param['bln2'] . "' AND YEAR(jp.periode)='" . $param['thn2'] . "')");
        $a = $this->dbSimrs->get()->row_array();
        if (empty($a)) {
            $this->dbSimrs->insert('japel_periode', ['periode' => $param['thn2'] . '-' . str_pad($param['bln2'], 2, "0", STR_PAD_LEFT) . '-01']);
            $i1 = $this->dbSimrs->insert_id();
        } else {
            $i1 = $a['id'];
        }
        return $i1;
    }

    public function get_periode_japel($param = [])
    {
        if (!empty($param['id'])) {
            $this->dbSimrs->where('jp.id', $param['id']);
        }
        if (!empty($param['periode']) && $param['periode'] == 2) {
            $this->dbSimrs->where("(MONTH(jp.periode)='" . $param['bln2'] . "' AND YEAR(jp.periode)='" . $param['thn2'] . "')");
        }
        if (!empty($param['periode']) && $param['periode'] == 3) {
            $this->dbSimrs->where("(YEAR(jp.periode)='" . $param['thn3'] . "')");
        }
        $this->dbSimrs->from('japel_periode jp');
        return $this->dbSimrs->get();
    }

    public function get_japel_pegawai($param = [])
    {
        $this->dbSimrs->select('SUM(e.japel) AS japel_pegawai');
        $this->dbSimrs->from('employee e');
        $this->dbSimrs->where('e.employee_group_id', 1);
        $this->dbSimrs->where('e.is_aktif', 1);
        return $this->dbSimrs->get()->row('japel_pegawai');
    }

    public function get_japel_pegawai_nonpns($param = [])
    {
        $this->dbSimrs->select('SUM(e.japel) AS japel_pegawai');
        $this->dbSimrs->from('employee e');
        $this->dbSimrs->where('e.employee_group_id !=', 1);
        $this->dbSimrs->where('e.is_aktif', 1);
        return $this->dbSimrs->get()->row('japel_pegawai');
    }

    public function get_japel_manajemen($param = [])
    {
        $this->dbSimrs->select('SUM(kdj.harga_jasa) AS japel_manajemen');
        $this->dbSimrs->from('kwitansi k');
        $this->dbSimrs->join('kwitansi_detail kd', 'k.id = kd.kwitansi_id');
        $this->dbSimrs->join('kwitansi_detail_jasa kdj', 'kd.id = kdj.kwitansi_detail_id');
        $this->dbSimrs->where('k.status', 'LUNAS');
        $this->dbSimrs->where('kdj.komponen_biaya_subject_id', 2);
        $this->dbSimrs->where("(MONTH(k.bayar_tgl)='" . $param['bln2'] . "' AND YEAR(k.bayar_tgl)='" . $param['thn2'] . "')");
        return $this->dbSimrs->get()->row('japel_manajemen');
    }

    public function get_pendapatan_umum($param = [])
    {
        $this->dbSimrs->select('SUM(k.total) AS pendapatan_umum');
        $this->dbSimrs->from('kwitansi k');
        $this->dbSimrs->where('k.status', 'LUNAS');
        $this->dbSimrs->where('k.payment_type_id<>64');
        $this->dbSimrs->where("(MONTH(k.bayar_tgl)='" . $param['bln2'] . "' AND YEAR(k.bayar_tgl)='" . $param['thn2'] . "')");
        return $this->dbSimrs->get()->row('pendapatan_umum');
    }

    public function get_pendapatan_bpjs($param = [])
    {
        $this->dbSimrs->select('SUM(k.plafon) AS pendapatan_bpjs');
        $this->dbSimrs->from('kwitansi k');
        $this->dbSimrs->where('k.status', 'LUNAS');
        $this->dbSimrs->where("(MONTH(k.bayar_tgl)='" . $param['bln2'] . "' AND YEAR(k.bayar_tgl)='" . $param['thn2'] . "')");
        return $this->dbSimrs->get()->row('pendapatan_bpjs');
    }

    public function get_jk1($param = [])
    {
        $this->dbSimrs->select('v.paramedic_id, count(v.paramedic_id) AS jml');
        $this->dbSimrs->from('visits v');
        $this->dbSimrs->where("(MONTH(v.date)='" . $param['bln2'] . "' AND YEAR(v.date)='" . $param['thn2'] . "')");
        $this->dbSimrs->group_by('v.paramedic_id');
        $a = $this->dbSimrs->get()->result_array();
        $d = [];
        foreach ($a as $row) {
            $d[$row['paramedic_id']] = $row['jml'];
        }
        return $d;
    }

    public function get_jk2($param = [])
    {
        $this->dbSimrs->select('vid.doctor_id, count(vid.doctor_id) AS jml');
        $this->dbSimrs->from('visits_inpatient vi');
        $this->dbSimrs->join('visits_inpatient_doctor vid', 'vid.visit_inpatient_id = vi.id');
        $this->dbSimrs->where("(MONTH(vi.exit_date)='" . $param['bln2'] . "' AND YEAR(vi.exit_date)='" . $param['thn2'] . "')");
        $this->dbSimrs->where('vid.jenis', 'DPJP 1');
        $this->dbSimrs->group_by('vid.doctor_id');
        $a = $this->dbSimrs->get()->result_array();
        $d = [];
        foreach ($a as $row) {
            $d[$row['doctor_id']] = $row['jml'];
        }
        return $d;
    }

    public function get_detail_kunjungan_dokter($param)
    {
        $this->dbSimrs->select('
            kdj.doctor_id,
            k.jenis,
            k.no_kwitansi,
            p.id AS no_rm,
            p.name AS name_pasien,
            rpt.name AS payment_type_name,
            k.bayar_tgl,
            kd.date AS tgl_tindakan,
            kd.layanan,
            kd.name AS tindakan,
            rk.name AS name_kelas,
            kdj.harga_jasa,
            kdj_sarana.harga_jasa AS harga_jasa_sarana,
            kdj_pelayanan.harga_jasa AS harga_jasa_pelayanan
        ');
        $this->dbSimrs->from('kwitansi k');
        $this->dbSimrs->join('kwitansi_detail kd', 'kd.kwitansi_id = k.id');
        $this->dbSimrs->join('kwitansi_detail_jasa kdj', 'kd.id = kdj.kwitansi_detail_id', 'left');
        $this->dbSimrs->join('ref_payment_types rpt', 'k.payment_type_id = rpt.id');
        $this->dbSimrs->join('visits v', 'k.id = v.kwitansi_id');
        $this->dbSimrs->join('patients p', 'v.patient_id = p.id');
        $this->dbSimrs->join('ref_kelas rk', 'rk.id = kd.kelas_id', 'left');
        $this->dbSimrs->join('kwitansi_detail_jasa kdj_sarana', 'kdj_sarana.kwitansi_detail_id = kd.id AND kdj_sarana.komponen_biaya_subject_id = 1', 'left');
        $this->dbSimrs->join('kwitansi_detail_jasa kdj_pelayanan', 'kdj_pelayanan.kwitansi_detail_id = kd.id AND kdj_pelayanan.komponen_biaya_subject_id = 2', 'left');
        $this->dbSimrs->where('kdj.doctor_id', $param['doctor_id']);
        $this->dbSimrs->where("(MONTH(kd.date)='" . $param['bln2'] . "' AND YEAR(kd.date)='" . $param['thn2'] . "')");
        $this->dbSimrs->group_by('kd.id');
        $this->dbSimrs->order_by('k.bayar_tgl, kd.date');
        return $this->dbSimrs->get();
    }

    public function get_detail_kunjungan_dokter_ranap($param)
    {
        $this->dbSimrs->select('
            kdj.doctor_id,
            k.jenis,
            k.no_kwitansi,
            p.id AS no_rm,
            p.name AS name_pasien,
            rpt.name AS payment_type_name,
            k.bayar_tgl,
            kd.date AS tgl_tindakan,
            kd.layanan,
            kd.name AS tindakan,
            rk.name AS name_kelas,
            kdj.harga_jasa,
            kdj_sarana.harga_jasa AS harga_jasa_sarana,
            kdj_pelayanan.harga_jasa AS harga_jasa_pelayanan
        ');
        $this->dbSimrs->from('kwitansi k');
        $this->dbSimrs->join('kwitansi_detail kd', 'kd.kwitansi_id = k.id');
        $this->dbSimrs->join('kwitansi_detail_jasa kdj', 'kd.id = kdj.kwitansi_detail_id', 'left');
        $this->dbSimrs->join('ref_payment_types rpt', 'k.payment_type_id = rpt.id');
        $this->dbSimrs->join('visits v', 'k.id = v.kwitansi_id');
        $this->dbSimrs->join('visits_inpatient vi', 'v.id = vi.visit_id');
        $this->dbSimrs->join('visits_inpatient_doctor vid', "vid.visit_inpatient_id = vi.id AND vid.jenis = 'DPJP 1'");
        $this->dbSimrs->join('patients p', 'v.patient_id = p.id');
        $this->dbSimrs->join('ref_kelas rk', 'rk.id = kd.kelas_id', 'left');
        $this->dbSimrs->join('kwitansi_detail_jasa kdj_sarana', 'kdj_sarana.kwitansi_detail_id = kd.id AND kdj_sarana.komponen_biaya_subject_id = 1', 'left');
        $this->dbSimrs->join('kwitansi_detail_jasa kdj_pelayanan', 'kdj_pelayanan.kwitansi_detail_id = kd.id AND kdj_pelayanan.komponen_biaya_subject_id = 2', 'left');
        $this->dbSimrs->where('kdj.doctor_id', $param['doctor_id']);
        $this->dbSimrs->where("(MONTH(kd.date)='" . $param['bln2'] . "' AND YEAR(kd.date)='" . $param['thn2'] . "')");
        $this->dbSimrs->group_by('kd.id');
        $this->dbSimrs->order_by('k.bayar_tgl, kd.date');
        return $this->dbSimrs->get();
    }

    public function get_japel_sarana($param = [])
    {
        $this->dbSimrs->select('SUM(kdj.harga_jasa) AS japel_sarana');
        $this->dbSimrs->from('kwitansi k');
        $this->dbSimrs->join('kwitansi_detail kd', 'k.id = kd.kwitansi_id');
        $this->dbSimrs->join('kwitansi_detail_jasa kdj', 'kd.id = kdj.kwitansi_detail_id');
        $this->dbSimrs->where('k.status', 'LUNAS');
        $this->dbSimrs->where('kdj.komponen_biaya_subject_id', 1);
        $this->dbSimrs->where("(MONTH(k.bayar_tgl)='" . $param['bln2'] . "' AND YEAR(k.bayar_tgl)='" . $param['thn2'] . "')");
        return $this->dbSimrs->get()->row('japel_sarana');
    }

    public function get_japel_dokter($param = [])
    {
        $this->dbSimrs->select('SUM(kdj.harga_jasa) AS japel_dokter');
        $this->dbSimrs->from('kwitansi k');
        $this->dbSimrs->join('kwitansi_detail kd', 'k.id = kd.kwitansi_id AND kd.prescription_id IS NULL');
        $this->dbSimrs->join('kwitansi_detail_jasa kdj', 'kd.id = kdj.kwitansi_detail_id AND kdj.doctor_id IS NOT NULL');
        $this->dbSimrs->where('k.status', 'LUNAS');
        $this->dbSimrs->where("(MONTH(k.bayar_tgl)='" . $param['bln2'] . "' AND YEAR(k.bayar_tgl)='" . $param['thn2'] . "')");
        return $this->dbSimrs->get()->row('japel_dokter');
    }

    public function get_japel_dokter_satuan($param = [])
    {
        $this->dbSimrs->select('kdj.doctor_id, SUM(kdj.harga_jasa) AS japel_dokter');
        $this->dbSimrs->from('kwitansi k');
        $this->dbSimrs->join('kwitansi_detail kd', 'k.id = kd.kwitansi_id AND kd.prescription_id IS NULL');
        $this->dbSimrs->join('kwitansi_detail_jasa kdj', 'kd.id = kdj.kwitansi_detail_id AND kdj.doctor_id IS NOT NULL');
        $this->dbSimrs->where('k.status', 'LUNAS');
        $this->dbSimrs->where("(MONTH(k.bayar_tgl)='" . $param['bln2'] . "' AND YEAR(k.bayar_tgl)='" . $param['thn2'] . "')");
        $this->dbSimrs->group_by("kdj.doctor_id");
        return $this->dbSimrs->get()->result_array();
    }

    public function insert_japel($data)
    {
        $data['created_by'] = $this->username;
        $data['created_at'] = $this->date;
        $data['updated_by'] = $this->username;
        $data['updated_at'] = $this->date;
        return $this->dbSimrs->insert('employee_japel', $data);
    }

    public function get_employee_japel($param = [])
    {
        $this->dbSimrs->select('e.*, ej.*, rj.name AS jabatan');
        $this->dbSimrs->from('employee e');
        $this->dbSimrs->join('employee_japel ej', 'e.id = ej.employee_id');
        $this->dbSimrs->join('ref_jabatan rj', 'e.jabatan_id = rj.id', 'left');
        $this->dbSimrs->where('ej.periode_japel_id', $param['periode_japel_id']);
        $this->dbSimrs->order_by('rj.id', 'asc');
        return $this->dbSimrs->get();
    }

    public function update_japel($param, $data)
    {
        $this->dbSimrs->where('id', $param['id']);
        return $this->dbSimrs->update('employee_japel', $data);
    }

    public function get_employe_japel($param)
    {
        return $this->dbSimrs->select('id')->get_where('employee_japel', ['employee_id' => $param['employee_id'], 'periode_japel_id' => $param['periode_japel_id']]);
    }

    public function update_periode_japel($key, $val)
    {
        $this->dbSimrs->where('id', $key);
        $this->dbSimrs->update('japel_periode', $val);
    }

    public function get_row($param = [])
    {
        $this->dbSimrs->select('ej.employee_id, ej.id');
        $this->dbSimrs->from('employee_japel ej');
        $this->dbSimrs->where('ej.periode_japel_id', $param['periode_japel_id']);
        $a = $this->dbSimrs->get()->result_array();
        $dt = [];
        foreach ($a as $key => $val) {
            $dt[$val['employee_id']] = $val['id'];
        }
        return $dt;
    }

    public function delete_employee_japel($param = [])
    {
        $this->dbSimrs->where('periode_japel_id', $param['periode_japel_id']);
        return $this->dbSimrs->delete('employee_japel');
    }

    public function delete_periode_japel($param = [])
    {
        $this->dbSimrs->where('id', $param['id']);
        return $this->dbSimrs->delete('japel_periode');
    }
}
